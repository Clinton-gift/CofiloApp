diff --git a/node_modules/@react-navigation/elements/lib/module/useFrameSize.js b/node_modules/@react-navigation/elements/lib/module/useFrameSize.js
index 54a6dec..a84df18 100644
--- a/node_modules/@react-navigation/elements/lib/module/useFrameSize.js
+++ b/node_modules/@react-navigation/elements/lib/module/useFrameSize.js
@@ -11,7 +11,13 @@ import { useSyncExternalStoreWithSelector } from 'use-sync-external-store/with-s
 // Load with require to avoid error from webpack due to missing export in older versions
 // eslint-disable-next-line import-x/no-commonjs
 import { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from "react/jsx-runtime";
-const SafeAreaListener = require('react-native-safe-area-context').SafeAreaListener;
+import * as SafeAreaContext from 'react-native-safe-area-context';
+
+
+// Access the runtime member (present on newer lib versions) without depending on its types
+const SafeAreaListener =
+  (SafeAreaContext).SafeAreaListener 
+
 const FrameContext = /*#__PURE__*/React.createContext(undefined);
 export function useFrameSize(selector, throttle) {
   const context = React.useContext(FrameContext);
diff --git a/node_modules/@react-navigation/elements/src/useFrameSize.tsx b/node_modules/@react-navigation/elements/src/useFrameSize.tsx
index f09e5b6..e93b7e1 100644
--- a/node_modules/@react-navigation/elements/src/useFrameSize.tsx
+++ b/node_modules/@react-navigation/elements/src/useFrameSize.tsx
@@ -12,12 +12,19 @@ import {
 import useLatestCallback from 'use-latest-callback';
 import { useSyncExternalStoreWithSelector } from 'use-sync-external-store/with-selector';
 
-// Load with require to avoid error from webpack due to missing export in older versions
-// eslint-disable-next-line import-x/no-commonjs
-const SafeAreaListener = require('react-native-safe-area-context')
-  .SafeAreaListener as
-  | typeof import('react-native-safe-area-context').SafeAreaListener
-  | undefined;
+import * as SafeAreaContext from 'react-native-safe-area-context';
+
+// minimal props the listener component needs for your usage
+type SafeAreaListenerProps = {
+  onChange: (e: { frame: Frame }) => void;
+  style?: StyleProp<ViewStyle>;
+};
+
+// Access the runtime member (present on newer lib versions) without depending on its types
+const SafeAreaListener =
+  (SafeAreaContext as any).SafeAreaListener as
+    | React.ComponentType<SafeAreaListenerProps>
+    | undefined;
 
 type Frame = {
   width: number;
